buildscript {
    ext {
        springBootVersion = '1.2.4.RELEASE'
        asciidoctorVersion = '1.5.2'
        managementVersion = '0.5.1.RELEASE'
        kotlinVersion = '0.12.613'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }

    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$managementVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:$asciidoctorVersion"
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'

    }
}

apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'spring-boot'
apply plugin: 'org.asciidoctor.gradle.asciidoctor'

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-snapshot/" }
    maven { url "http://repo.spring.io/libs-milestone/" }
}

ext {
    javaVersion = '1.8'
    mongoDriverVersion = '3.0.0'
    rxjavaVersion = '1.0.8'
    rxscalaVersion = '0.24.1'
    reactorVersion = '2.0.3.RELEASE'
    springBootVersion = '1.2.4.RELEASE'
    springCloudVersion = '1.0.2.RELEASE'
    springIOPlatformVersion = '1.1.2.RELEASE'
    generatedDocumentation = file('docs/api')
}

ext['reactor.version'] = reactorVersion
ext['spring-hateoas.version'] = '0.17.0.RELEASE'
ext['spring-data-releasetrain.version'] = 'Fowler-RELEASE'
ext['undertow.version'] = '1.2.5.Final'
ext['jackson.version'] = '2.5.2'


license {
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    header rootProject.file('NOTICE')
    includes(["**/*.java", "**/*.groovy", "**/*.scala", "**/*.yml"])
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        scala = 'SLASHSTAR_STYLE'
    }
}



dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:$springIOPlatformVersion"
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:$springCloudVersion"
    }

    //noinspection GroovyAssignabilityCheck
    dependencies {
        //noinspection GroovyAssignabilityCheck
        dependency("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
            exclude "org.springframework.boot:spring-boot-starter-tomcat"
        }
    }
}

dependencies {
    compile project(":curly-commons")
    compile "javax.ws.rs:jsr311-api:1.1.1"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
    compile "org.springframework.cloud:spring-cloud-starter-hystrix"
    compile 'org.jetbrains:annotations:13.0'
    compile "org.springframework.boot:spring-boot-starter-data-mongodb"
    compile "org.springframework.boot:spring-boot-starter-data-rest"
    compile "org.springframework.boot:spring-boot-starter-amqp"
    runtime "io.projectreactor:reactor-logback:$reactorVersion"
    testCompile "org.springframework.boot:spring-boot-starter-test"
    testCompile "com.jayway.jsonpath:json-path"
    testCompile "org.skyscreamer:jsonassert:1.2.3"
    testCompile 'org.springframework.restdocs:spring-restdocs:0.1.0.BUILD-SNAPSHOT'
}

test {
    systemProperty 'org.springframework.restdocs.outputDir', generatedDocumentation
    outputs.dir generatedDocumentation
}
asciidoctor {
    //noinspection GroovyAssignabilityCheck
    attributes 'generated': generatedDocumentation
    inputs.dir generatedDocumentation
    dependsOn test
}
