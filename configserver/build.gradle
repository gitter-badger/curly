buildscript {
    ext {
        springBootVersion = '1.2.4.RELEASE'
        asciidoctorVersion = '1.5.2'
        managementVersion = '0.5.1.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }

    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "io.spring.gradle:dependency-management-plugin:$managementVersion"
        classpath "org.asciidoctor:asciidoctor-gradle-plugin:$asciidoctorVersion"
        classpath 'nl.javadude.gradle.plugins:license-gradle-plugin:0.11.0'

    }
}


apply plugin: 'license'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'io.spring.dependency-management'


repositories {
    jcenter()
    mavenCentral()
    maven { url "https://repo.spring.io/libs-snapshot/" }
    maven { url "http://repo.spring.io/libs-milestone/" }
}

ext {
    groovyVersion = '2.4.3'
    javaVersion = '1.8'
    rxjavaVersion = '1.0.8'
    reactorVersion = '2.0.3.RELEASE'
    springBootVersion = '1.2.4.RELEASE'
    springCloudVersion = '1.0.2.RELEASE'
    springIOPlatformVersion = '1.1.2.RELEASE'
}

ext['reactor.version'] = reactorVersion
ext['spring-hateoas.version'] = '0.17.0.RELEASE'
ext['spring-data-releasetrain.version'] = 'Fowler-RELEASE'
ext['undertow.version'] = '1.2.5.Final'
ext['jackson.version'] = '2.5.2'


license {
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    header rootProject.file('NOTICE')
    includes(["**/*.java", "**/*.groovy", "**/*.scala", "**/*.yml"])
    strictCheck true
    mapping {
        java = 'SLASHSTAR_STYLE'
        groovy = 'SLASHSTAR_STYLE'
        scala = 'SLASHSTAR_STYLE'
    }
}



dependencyManagement {
    imports {
        mavenBom "io.spring.platform:platform-bom:$springIOPlatformVersion"
        mavenBom "org.springframework.cloud:spring-cloud-starter-parent:$springCloudVersion"
    }

    //noinspection GroovyAssignabilityCheck
    dependencies {
        //noinspection GroovyAssignabilityCheck
        dependency("org.springframework.boot:spring-boot-starter-web:$springBootVersion") {
            exclude "org.springframework.boot:spring-boot-starter-tomcat"
        }
    }
}

dependencies {
    compile "javax.ws.rs:jsr311-api:1.1.1"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-web"
    compile "org.springframework.boot:spring-boot-starter-undertow"
    compile "org.springframework.cloud:spring-cloud-starter-eureka"
    runtime "io.projectreactor:reactor-logback:$reactorVersion"
    compile "org.springframework.cloud:spring-cloud-starter-security"
    compile "org.springframework.security.oauth:spring-security-oauth2"
    compile "org.codehaus.groovy:groovy-all:$groovyVersion"
    compile "org.springframework.cloud:spring-cloud-config-server"

}
jar {
    baseName = 'config-server'
    verison = '1.0.0.RC'
}
springBoot {
    mainClass = 'curly.configserver.ConfigServerApplication'
}
